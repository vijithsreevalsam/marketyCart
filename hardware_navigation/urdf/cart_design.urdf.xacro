<?xml version="1.0"?>
<robot name="cart" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Includes -->
  <xacro:include filename="$(find hardware_navigation)/urdf/material.xacro" />
  <xacro:include filename="$(find hardware_navigation)/urdf/macros.xacro" />

  <!-- Robot Constants -->
  <xacro:property name="base_width" value="0.2"/>
  <xacro:property name="base_length" value="0.4"/>
  <xacro:property name="base_height" value="0.1"/>

  <xacro:property name="wheel_radius" value="0.06"/>
  <xacro:property name="wheel_width" value="0.03"/>
  <xacro:property name="wheel_ygap" value="0.02"/>
  <xacro:property name="wheel_zoff" value="0.03"/>
  <xacro:property name="wheel_xoff" value="0.12"/>

  <xacro:property name="caster_xoff" value="0.14"/>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <!-- Slight lift added to avoid sink -->
    <origin xyz="0.0 0.0 ${-(wheel_radius + wheel_zoff) + 0.005}" rpy="0 0 0"/>
  </joint>
  <!-- Robot Base -->
  <link name="base_link">
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
  </link>

  <!-- Wheel Macro Definition -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black"/>
          <color rgba="0.0 0.0 0.0 1.0"/>
      </visual>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect * wheel_xoff} ${y_reflect * (base_width / 2 + wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Instantiate Left & Right Wheels -->
  <xacro:wheel prefix="left_wheel" x_reflect="-1" y_reflect="1"/>
  <xacro:wheel prefix="right_wheel" x_reflect="-1" y_reflect="-1"/>

  <!-- Front Caster Wheel -->
  <link name="front_caster">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius + wheel_zoff - base_height / 2)}"/>
      </geometry>
    </collision>
    <!-- Reduced mass to avoid drag -->
    <xacro:sphere_inertia m="0.05" r="${(wheel_radius + wheel_zoff - base_height / 2)}"/>
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius + wheel_zoff - base_height / 2)}"/>
      </geometry>
      <material name="black"/>
        <color rgba="0.0 0.0 0.0 1.0"/>s
    </visual>
  </link>
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height / 2)}" rpy="0 0 0"/>
  </joint>
  <!-- Gazebo-specific friction tuning for caster -->
  <gazebo reference="front_caster">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
</robot>
